{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","useState","number","setNumber","date","setDate","cvv","setCvv","touchedNumber","setTouchedNumber","touchedDate","setTouchedDate","touchedCvv","setTouchedCvv","numberError","setNumberError","dateError","setDateError","cvvError","setCvvError","formValid","setFormValid","useEffect","blurHandler","e","target","name","className","onSubmit","preventDefault","alert","handleSubmit","maxLength","onChange","foo","value","split","join","length","match","RegExp","test","String","numberHandler","onBlur","type","placeholder","role","class","dateHandler","console","log","cvvHandler","disabled","onClick","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"yLAwIeA,G,MArIH,WAAO,IAAD,EACYC,mBAAS,IADrB,mBACTC,EADS,KACDC,EADC,OAEQF,mBAAS,IAFjB,mBAETG,EAFS,KAEHC,EAFG,OAGMJ,mBAAS,IAHf,mBAGTK,EAHS,KAGJC,EAHI,OAI0BN,oBAAS,GAJnC,mBAITO,EAJS,KAIMC,EAJN,OAKsBR,oBAAS,GAL/B,mBAKTS,EALS,KAKIC,EALJ,OAMoBV,oBAAS,GAN7B,mBAMTW,EANS,KAMGC,EANH,OAOsBZ,mBAAS,sIAP/B,mBAOTa,EAPS,KAOIC,EAPJ,OAQkBd,mBAAS,sIAR3B,mBAQTe,EARS,KAQEC,EARF,OASgBhB,mBAAS,sIATzB,mBASTiB,EATS,KASCC,EATD,OAUkBlB,oBAAS,GAV3B,mBAUTmB,EAVS,KAUEC,EAVF,KAYhBC,qBAAU,WAEND,IADEP,GAAeE,GAAaE,MAK/B,CAACJ,EAAaE,EAAWE,IAE5B,IAAMK,EAAc,SAACC,GACnB,OAAQA,EAAEC,OAAOC,MACf,IAAK,SACHjB,GAAiB,GACjB,MACF,IAAK,OACHE,GAAe,GACf,MACF,IAAK,MACHE,GAAc,KA4EpB,OACE,qBAAKc,UAAU,0CAAf,SACE,uBAAMA,UAAU,WAAWC,SAAU,SAAAJ,GAAC,OAnBrB,SAACA,GAClBA,EAAEK,iBACFC,MAAM,gBAAkB5B,EACtB,WAAaE,EACb,WAAYE,GAe4ByB,CAAaP,IAAvD,UACM,qBAAKG,UAAU,+CAAf,6BACI,sBAAKA,UAAU,iBAAf,UACI,qBAAKA,UAAU,4CAAf,4EACM,uBAAOA,UAAU,0CAA0CK,UAAU,KAAKN,KAAK,SAASO,SAAU,SAAAT,GAAC,OA5ErG,SAACA,GACnB,IAAIU,EAAMV,EAAEC,OAAOU,MAAMC,MAAM,KAAKC,KAAK,IACrCH,EAAII,OAAS,IACbJ,EAAMA,EAAIK,MAAM,IAAIC,OAAO,SAAU,MAAMH,KAAK,MAGpDlC,EADc+B,GAEH,sCACHO,KAAKC,OAAOlB,EAAEC,OAAOU,QAM3BpB,EAAe,KALfA,EAAe,0IACVS,EAAEC,OAAOU,OACZpB,EAAe,uIAiEwG4B,CAAcnB,IAAKW,MAAOjC,EAAQ0C,OAAQ,SAAApB,GAAC,OAAID,EAAYC,IAAIqB,KAAK,OAAOC,YAAY,2BAC5LtC,GAAiBM,GAAgB,sBAAKiC,KAAK,QAAQpB,UAAU,+CAA5B,UAA2E,mBAAGqB,MAAM,mCAApF,IAA2HlC,KAExK,sBAAKa,UAAU,iBAAf,UACE,qBAAKA,UAAU,4CAAf,wFACM,uBAAOA,UAAU,0CAA0CK,UAAU,IAAIN,KAAK,OAAOO,SAAU,SAAAT,GAAC,OA/DlG,SAACA,GACjB,IAAIU,EAAMV,EAAEC,OAAOU,MAAMC,MAAM,KAAKC,KAAK,IACnCH,EAAII,OAAS,IACbJ,EAAMA,EAAIK,MAAM,IAAIC,OAAO,SAAU,MAAMH,KAAK,MAGtDhC,EADgB6B,GAEL,iCACHO,KAAKC,OAAOlB,EAAEC,OAAOU,QAM3BlB,EAAa,KALbA,EAAa,qMACRO,EAAEC,OAAOU,OACZlB,EAAa,uIAoDqGgC,CAAYzB,IAAIW,MAAO/B,EAAMwC,OAAQ,SAAApB,GAAC,OAAID,EAAYC,IAAIqB,KAAK,OAAOC,YAAY,iCACpLpC,GAAeM,GAAc,sBAAKW,UAAU,+CAAf,UAA8D,mBAAGqB,MAAM,mCAAvE,IAA8GhC,KAErJ,sBAAKW,UAAU,iBAAf,UACE,qBAAKA,UAAU,4CAAf,mBACM,uBAAOA,UAAU,0CAA0CK,UAAU,IAAIN,KAAK,MAAMO,SAAU,SAAAT,GAAC,OAlDpG,SAACA,GACdjB,EAAOiB,EAAEC,OAAOU,OAChBe,QAAQC,IAAI3B,EAAEC,OAAOU,OACV,YACHM,KAAKC,OAAOlB,EAAEC,OAAOU,QAU3BhB,EAAY,KARZA,EAAY,uKACRK,EAAEC,OAAOU,MAAQ,GACnBhB,EAAY,mMAETK,EAAEC,OAAOU,OACZhB,EAAY,uIAuCqGiC,CAAW5B,IAAKW,MAAO7B,EAAKsC,OAAQ,SAAApB,GAAC,OAAID,EAAYC,IAAIqB,KAAK,WAAWC,YAAY,YACtLlC,GAAcM,GAAa,sBAAKS,UAAU,+CAAf,UAA8D,mBAAGqB,MAAM,mCAAvE,IAA8G9B,KAE3J,sBAAKS,UAAU,qCAAf,UACE,wBAAQA,UAAU,uBAAuB0B,UAAWjC,EAAWyB,KAAK,SAApE,oEACA,wBAAQlB,UAAU,iBAAiB2B,QA9B1B,WACbnD,EAAU,IACVE,EAAQ,IACRE,EAAO,IACPQ,EAAe,sIACfE,EAAa,sIACbE,EAAY,uIAyBP0B,KAAK,QADN,wECrHKU,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.0ef20488.chunk.js","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nconst App = () => {  \n  const [number, setNumber] = useState('');\n  const [date, setDate] = useState('');\n  const [cvv, setCvv] = useState('');\n  const [touchedNumber, setTouchedNumber] = useState(false);  \n  const [touchedDate, setTouchedDate] = useState(false);  \n  const [touchedCvv, setTouchedCvv] = useState(false);\n  const [numberError, setNumberError] = useState('Поле не может быть пустым');\n  const [dateError, setDateError] = useState('Поле не может быть пустым')\n  const [cvvError, setCvvError] = useState('Поле не может быть пустым');\n  const [formValid, setFormValid] = useState(false);\n\n  useEffect(() => {\n    if (numberError || dateError || cvvError) {\n      setFormValid(false)\n    } else {\n      setFormValid(true)\n    }\n  }, [numberError, dateError, cvvError])\n\n  const blurHandler = (e) => {\n    switch (e.target.name) {\n      case 'number':\n        setTouchedNumber(true)\n        break;\n      case 'date':\n        setTouchedDate(true)\n        break;\n      case 'cvv':\n        setTouchedCvv(true)\n        break;\n      default:\n    }\n  }\n\n  const numberHandler = (e) => {\n      var foo = e.target.value.split(\"-\").join(\"\");\n      if (foo.length > 0) {\n          foo = foo.match(new RegExp('.{1,4}', 'g')).join(\"-\");\n      }\n      const value = foo;\n      setNumber(value);\n      const re = /[0-9]{4}-[0-9]{4}-[0-9]{4}-[0-9]{4}/;\n      if (!re.test(String(e.target.value))) {\n        setNumberError('Некорректный номер карты')\n        if (!e.target.value) {\n          setNumberError('Поле не может быть пустым')\n        }\n      } else {\n        setNumberError('')\n      }\n  }\n\n  const dateHandler = (e) => {\n      var foo = e.target.value.split(\"/\").join(\"\");\n        if (foo.length > 0) {\n            foo = foo.match(new RegExp('.{1,2}', 'g')).join(\"/\");\n        }\n        const value = foo;\n      setDate(value);\n      const re = /^(0[1-9]|1[0-2])\\/?([0-9]{2})$/;  \n      if (!re.test(String(e.target.value))) {\n        setDateError('Внимание! Введите дату в формате ММ/ГГ')\n        if (!e.target.value) {\n          setDateError('Поле не может быть пустым')\n        }\n      } else {\n        setDateError('');\n      }\n  }\n\nconst cvvHandler = (e) => {\n      setCvv(e.target.value);\n      console.log(e.target.value);\n      const re = /[0-9]{3}$/;\n      if (!re.test(String(e.target.value))) \n      {\n        setCvvError('CVV должен содержать только цифры')\n        if (e.target.value < 3) {\n          setCvvError('Длина CVV не может быть короче 3 символов')\n        }\n        if (!e.target.value) {\n          setCvvError('Поле не может быть пустым')\n        }\n      } else {\n        setCvvError('');\n      }\n}\n  const handleSubmit = (e) => {\n      e.preventDefault();\n      alert('Card number: ' + number +\n        '\\nDate: ' + date +\n        '\\nCVV2: '+ cvv    \n      )\n  }\n\n  const clearAll = () => {  \n      setNumber('');\n      setDate('');\n      setCvv('');      \n      setNumberError('Поле не может быть пустым');\n      setDateError('Поле не может быть пустым')\n      setCvvError('Поле не может быть пустым')      \n  }\n\n  return (\n    <div className=\"container d-flex justify-content-center\">\n      <form className='col-lg-8' onSubmit={e => handleSubmit(e)}>\n            <div className='display-4 my-3 d-flex justify-content-center'>Form Validation</div>                  \n                <div className='form-group row'>\n                    <div className='col-form-label col-lg-3 col-md-3 col-sm-4'>Номер карты:</div>\n                          <input className='form-control col-lg-9 col-md-9 col-sm-8' maxLength='19' name='number' onChange={e => numberHandler(e) } value={number} onBlur={e => blurHandler(e)} type='text' placeholder='XXXX-XXXX-XXXX-XXXX' /></div>\n                          {(touchedNumber && numberError) && <div role='alert' className='alert alert-danger d-flex align-items-center'><i class=\"fas fa-exclamation-circle mr-2\"></i> {numberError}</div>}\n                          \n                <div className='form-group row'>\n                  <div className='col-form-label col-lg-3 col-md-3 col-sm-4'>Срок действия:</div>\n                        <input className='form-control col-lg-9 col-md-9 col-sm-8' maxLength='5' name='date' onChange={e => dateHandler(e) }value={date} onBlur={e => blurHandler(e)} type='text' placeholder='ММ/ГГ' /></div>\n                        {(touchedDate && dateError) && <div className='alert alert-danger d-flex align-items-center'><i class=\"fas fa-exclamation-circle mr-2\"></i> {dateError}</div>}\n                  \n                <div className='form-group row'>\n                  <div className='col-form-label col-lg-3 col-md-3 col-sm-4'>CVV2:</div>\n                        <input className='form-control col-lg-9 col-md-9 col-sm-8' maxLength='3' name='cvv' onChange={e => cvvHandler(e) } value={cvv} onBlur={e => blurHandler(e)} type='password' placeholder='CVV2' /></div>\n                        {(touchedCvv && cvvError) && <div className='alert alert-danger d-flex align-items-center'><i class=\"fas fa-exclamation-circle mr-2\"></i> {cvvError}</div>}\n            \n        <div className='d-flex justify-content-center mt-3'>\n          <button className='btn btn-primary mr-2' disabled={!formValid} type='submit'>Отправить</button>\n          <button className='btn btn-danger' onClick={clearAll}\n           type='reset'>Очистить</button></div>\n      </form>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}